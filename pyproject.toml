# ============================================================================
# NjordScan v1.0.0 - The Ultimate Security Scanner
# Modern Python packaging configuration with comprehensive features
# ============================================================================

[build-system]
requires = ["setuptools>=65.0", "wheel", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "njordscan"
version = "1.0.0"
description = "The Ultimate Security Scanner for Next.js, React, and Vite Applications"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "NjordScan Contributors", email = "info@njordscan.dev"},
    {name = "Nimdy", email = "info@hackme.ai"}
]
maintainers = [
    {name = "Nimdy", email = "info@hackme.ai"}
]
keywords = [
    "security", "scanner", "vulnerability", "nextjs", "react", "vite",
    "web-security", "static-analysis", "dynamic-analysis", "sast", "dast",
    "owasp", "cybersecurity", "penetration-testing", "security-audit",
    "ai-security", "machine-learning", "threat-intelligence", "devsecops",
    "ci-cd", "github-actions", "gitlab-ci", "azure-devops", "jenkins"
]
classifiers = [
    # Development status
    "Development Status :: 5 - Production/Stable",
    
    # Audience and topic
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Topic :: Security",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules",
    
    # License
    "License :: OSI Approved :: MIT License",
    
    # Operating systems
    "Operating System :: OS Independent",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
    
    # Python versions
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
    
    # Framework support
    "Framework :: AsyncIO",
    "Framework :: Django",
    
    # Additional categories
    "Environment :: Console",
    "Environment :: Web Environment",
    "Natural Language :: English",
    "Typing :: Typed",
]
requires-python = ">=3.8"

# Core dependencies - essential for basic functionality
dependencies = [
    # Core CLI and Terminal UI
    "click>=8.0.0,<9.0.0",
    "rich>=13.0.0,<15.0.0",
    "colorama>=0.4.4,<1.0.0",
    
    # HTTP and Networking
    "aiohttp>=3.8.0,<4.0.0",
    "requests>=2.28.0,<3.0.0",
    "httpx>=0.24.0,<1.0.0",
    
    # Configuration and Data Parsing
    "pyyaml>=6.0,<7.0.0",
    "toml>=0.10.2,<1.0.0",
    "python-dotenv>=1.0.0,<2.0.0",
    
    # Web Scraping and HTML Processing
    "beautifulsoup4>=4.11.0,<5.0.0",
    "lxml>=4.9.0,<5.0.0",
    
    # Template Engine and Reporting
    "jinja2>=3.1.0,<4.0.0",
    "markdown>=3.4.0,<4.0.0",
    
    # Security and Cryptography
    "cryptography>=40.0.0,<42.0.0",
    "pyjwt>=2.7.0,<3.0.0",
    
    # Concurrency and Performance
    "aiofiles>=23.0.0,<24.0.0",
    "asyncio-throttle>=1.0.2,<2.0.0",
    
    # Type Hints and Validation
    "typing-extensions>=4.5.0,<5.0.0",
    "pydantic>=2.0.0,<3.0.0",
    
    # Security Scanning
    "safety>=3.0.0,<4.0.0",
    "packaging>=23.0,<24.0",
    
    # Utilities
    "tqdm>=4.65.0,<5.0.0",
    "tabulate>=0.9.0,<1.0.0",
    "psutil>=5.9.0,<6.0.0",
    "watchdog>=3.0.0,<4.0.0",
    
    # Plugin System
    "importlib-metadata>=6.8.0,<7.0.0",
    "stevedore>=5.1.0,<6.0.0",
    "pluggy>=1.2.0,<2.0.0",
    
    # Database and Caching
    "diskcache>=5.6.0,<6.0.0",
    
    # Network Security
    "dnspython>=2.4.0,<3.0.0",
    
    # Compression
    "lz4>=4.3.0,<5.0.0",
    
    # Additional Security Tools
    "bandit>=1.7.0,<2.0.0",
]

# Optional dependencies for different use cases
[project.optional-dependencies]

# Development dependencies
dev = [
    "pytest>=7.4.0,<8.0.0",
    "pytest-asyncio>=0.21.0,<1.0.0",
    "pytest-cov>=4.1.0,<5.0.0",
    "pytest-xdist>=3.3.0,<4.0.0",
    "black>=23.7.0,<24.0.0",
    "flake8>=6.0.0,<7.0.0",
    "mypy>=1.5.0,<2.0.0",
    "isort>=5.12.0,<6.0.0",
    "pre-commit>=3.3.0,<4.0.0",
    "bandit>=1.7.0,<2.0.0",
    "coverage>=7.3.0,<8.0.0",
]

# Documentation dependencies
docs = [
    "mkdocs>=1.5.0,<2.0.0",
    "mkdocs-material>=9.2.0,<10.0.0",
    "mkdocs-mermaid2-plugin>=1.1.0,<2.0.0",
    "mkdocs-git-revision-date-localized-plugin>=1.2.0,<2.0.0",
    "mkdocs-minify-plugin>=0.7.0,<1.0.0",
]

# AI and Machine Learning features
ai = [
    "scikit-learn>=1.3.0,<2.0.0",
    "numpy>=1.24.0,<2.0.0",
    "pandas>=2.0.0,<3.0.0",
    "nltk>=3.8.0,<4.0.0",
    "textblob>=0.17.0,<1.0.0",
    "spacy>=3.6.0,<4.0.0",
]

# Advanced static analysis
analysis = [
    "ast-tools>=0.1.0,<1.0.0",
    "esprima>=4.0.0,<5.0.0",
    "tree-sitter>=0.20.0,<1.0.0",
    "semgrep>=1.40.0,<2.0.0",
    "bandit>=1.7.0,<2.0.0",
]

# Enterprise features
enterprise = [
    "ldap3>=2.9.0,<3.0.0",
    "python-saml>=1.15.0,<2.0.0",
    "redis>=4.5.0,<5.0.0",
    "sqlalchemy>=1.4.0,<2.0.0",
    "celery>=5.3.0,<6.0.0",
    "prometheus-client>=0.17.0,<1.0.0",
]

# Advanced reporting and visualization
reporting = [
    "reportlab>=3.6.0,<4.0.0",
    "weasyprint>=59.0,<60.0",
    "pillow>=10.0.0,<11.0.0",
    "matplotlib>=3.7.0,<4.0.0",
    "plotly>=5.15.0,<6.0.0",
    "seaborn>=0.12.0,<1.0.0",
]

# CI/CD integrations
cicd = [
    "github3.py>=4.0.0,<5.0.0",
    "python-gitlab>=3.15.0,<4.0.0",
    "azure-devops>=7.1.0,<8.0.0",
    "jenkins-api>=1.8.0,<2.0.0",
]

# Performance optimization
performance = [
    "cython>=3.0.0,<4.0.0",
    "numba>=0.57.0,<1.0.0",
    "ujson>=5.8.0,<6.0.0",
    "orjson>=3.9.0,<4.0.0",
    "msgpack>=1.0.0,<2.0.0",
]

# Network security features
network = [
    "scapy>=2.5.0,<3.0.0",
    "python-nmap>=0.7.0,<1.0.0",
    "dnspython>=2.4.0,<3.0.0",
    "websockets>=11.0.0,<12.0.0",
]

# Database support
database = [
    "sqlalchemy>=1.4.0,<2.0.0",
    "alembic>=1.11.0,<2.0.0",
    "psycopg2-binary>=2.9.0,<3.0.0",
    "pymongo>=4.4.0,<5.0.0",
    "redis>=4.5.0,<5.0.0",
]

# All optional dependencies combined
all = [
    # Development
    "pytest>=7.4.0", "pytest-asyncio>=0.21.0", "pytest-cov>=4.1.0",
    "black>=23.7.0", "flake8>=6.0.0", "mypy>=1.5.0", "isort>=5.12.0",
    
    # Documentation
    "mkdocs>=1.5.0", "mkdocs-material>=9.2.0",
    
    # AI/ML
    "scikit-learn>=1.3.0", "numpy>=1.24.0", "pandas>=2.0.0", "nltk>=3.8.0",
    
    # Analysis
    "semgrep>=1.40.0", "bandit>=1.7.0",
    
    # Enterprise
    "ldap3>=2.9.0", "redis>=4.5.0", "sqlalchemy>=1.4.0",
    
    # Reporting
    "reportlab>=3.6.0", "matplotlib>=3.7.0", "plotly>=5.15.0",
    
    # CI/CD
    "github3.py>=4.0.0", "python-gitlab>=3.15.0",
    
    # Performance
    "ujson>=5.8.0", "orjson>=3.9.0",
    
    # Network
    "dnspython>=2.4.0", "websockets>=11.0.0",
]

[project.urls]
Homepage = "https://njordscan.dev"
Documentation = "https://njordscan.dev/docs"
Repository = "https://github.com/nimdy/njordscan"
"Bug Reports" = "https://github.com/nimdy/njordscan/issues"
"Feature Requests" = "https://github.com/nimdy/njordscan/discussions"
Discord = "https://discord.gg/njordscan"
Security = "https://github.com/nimdy/njordscan/security"
Changelog = "https://github.com/nimdy/njordscan/blob/main/CHANGELOG.md"
Contributing = "https://github.com/nimdy/njordscan/blob/main/CONTRIBUTING.md"
Funding = "https://github.com/sponsors/nimdy"

[project.scripts]
njordscan = "njordscan.cli:main"
njord = "njordscan.cli:main"

# Entry points for plugin system
[project.entry-points."njordscan.plugins"]
nextjs = "njordscan.frameworks.nextjs_analyzer:NextJSAnalyzer"
react = "njordscan.frameworks.react_analyzer:ReactAnalyzer"
vite = "njordscan.frameworks.vite_analyzer:ViteAnalyzer"

[project.entry-points."njordscan.modules"]
headers = "njordscan.modules.headers:HeadersModule"
static = "njordscan.modules.code_static:CodeStaticModule"
dependencies = "njordscan.modules.dependencies:DependenciesModule"
configs = "njordscan.modules.configs:ConfigsModule"
runtime = "njordscan.modules.runtime:RuntimeModule"
ai = "njordscan.modules.ai_endpoints:AIEndpointsModule"

[project.entry-points."njordscan.reporters"]
terminal = "njordscan.report.formatter:TerminalReporter"
html = "njordscan.report.formatter:HTMLReporter"
json = "njordscan.report.formatter:JSONReporter"
sarif = "njordscan.report.formatter:SARIFReporter"

# ============================================================================
# Tool Configuration
# ============================================================================

# Black code formatting
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
)/
'''

# isort import sorting
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["njordscan"]
known_third_party = ["click", "rich", "aiohttp", "requests", "pyyaml", "jinja2"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

# MyPy type checking
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_optional = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
show_error_codes = true
show_column_numbers = true
pretty = true

# Ignore missing imports for optional dependencies
[[tool.mypy.overrides]]
module = [
    "scapy.*",
    "nmap.*",
    "ldap3.*",
    "saml2.*",
    "redis.*",
    "celery.*",
    "prometheus_client.*",
    "reportlab.*",
    "weasyprint.*",
    "matplotlib.*",
    "plotly.*",
    "seaborn.*",
    "sklearn.*",
    "nltk.*",
    "spacy.*",
    "numba.*",
    "tree_sitter.*",
    "semgrep.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=njordscan",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-fail-under=80",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "network: marks tests that require network access",
    "ai: marks tests that require AI/ML dependencies",
    "enterprise: marks tests that require enterprise features",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

# Coverage configuration
[tool.coverage.run]
source = ["njordscan"]
branch = true
omit = [
    "tests/*",
    "setup.py",
    "njordscan/__main__.py",
    "*/migrations/*",
    "*/.venv/*",
    "*/venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
ignore_errors = true
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"

# Bandit security linting
[tool.bandit]
exclude_dirs = ["tests", "build", "dist"]
tests = ["B201", "B301", "B302", "B303", "B304", "B305", "B306", "B307", "B308", "B309", "B310", "B311", "B312", "B313", "B314", "B315", "B316", "B317", "B318", "B319", "B320", "B321", "B322", "B323", "B324", "B325", "B601", "B602", "B603", "B604", "B605", "B606", "B607", "B608", "B609", "B610", "B611", "B701", "B702", "B703"]
skips = ["B101", "B601"]

# Flake8 linting (via setup.cfg compatibility)
[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503", "E501"]
exclude = [".git", "__pycache__", "build", "dist", ".eggs", "*.egg"]
per-file-ignores = [
    "__init__.py:F401",
    "tests/*:S101,S106",
]

# ============================================================================
# Setuptools Configuration
# ============================================================================

[tool.setuptools]
zip-safe = false
include-package-data = true

[tool.setuptools.packages.find]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
njordscan = [
    "data/*.yaml",
    "data/*.json",
    "data/*.txt",
    "templates/*.j2",
    "templates/*.html",
    "static/css/*.css",
    "static/js/*.js",
    "static/images/*",
    "py.typed",
]

# Dynamic versioning with setuptools-scm
[tool.setuptools_scm]
write_to = "njordscan/_version.py"
version_scheme = "post-release"
local_scheme = "dirty-tag"

# ============================================================================
# Additional Tool Configuration
# ============================================================================

# Pre-commit hooks
[tool.pre-commit]
repos = [
    {repo = "https://github.com/psf/black", rev = "23.7.0", hooks = [{id = "black"}]},
    {repo = "https://github.com/pycqa/isort", rev = "5.12.0", hooks = [{id = "isort"}]},
    {repo = "https://github.com/pycqa/flake8", rev = "6.0.0", hooks = [{id = "flake8"}]},
    {repo = "https://github.com/pre-commit/mirrors-mypy", rev = "v1.5.0", hooks = [{id = "mypy"}]},
]